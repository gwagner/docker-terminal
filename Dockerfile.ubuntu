FROM ubuntu:latest

# Ensure apt installs are NOT interrupted by questions
ENV DEBIAN_FRONTEND=noninteractive

# This timeout ensure that non-exited docker containers get cleaned up at some point
ENV TMOUT=21600

# Get base packages installed and create a user
RUN apt-get update && \
    apt-get install -y unzip htop apt-utils nmap dnsutils zsh curl git nano locales wget sudo apt-transport-https \
        ca-certificates ant gnupg-agent software-properties-common && \
    useradd -l -m -s /bin/zsh -u 1001 -N -G sudo docker && \
    echo "docker ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/docker && \
    locale-gen en_US.UTF-8

# Add Docker
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
    apt-get update && \
    apt-get install -y docker-ce docker-ce-cli containerd.io

# Add newest golang
RUN add-apt-repository ppa:longsleep/golang-backports && \
    apt-get update && \
    apt-get install -y golang-go

# Add PHP 7.3
RUN add-apt-repository ppa:ondrej/php && \
    apt-get update && \
    apt-get install -y --assume-yes php7.3-cli php7.3-zip && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" &&\
    php composer-setup.php --install-dir /bin --filename composer && \
    php -r "unlink('composer-setup.php');" 

# Add newest ansible
RUN apt-add-repository --yes --update ppa:ansible/ansible && \
    apt-get update && \
    apt-get install -y ansible

# Add chefdk 3.9
RUN wget -O /tmp/chefdk.deb https://packages.chef.io/files/stable/chefdk/3.9.0/ubuntu/18.04/chefdk_3.9.0-1_amd64.deb && \
    dpkg -i /tmp/chefdk.deb && \
    rm -f /tmp/chefdk.deb

# Ensure we do everything else as that newly created user
USER 1001

# Install oh-my-zsh and nano colors
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sed 's:env zsh -l::g' | sed 's:chsh -s .*$::g')" && \
    git clone https://github.com/scopatz/nanorc.git /home/docker/.nano

# Ensure we do a logon when we run this container
ENTRYPOINT ["/bin/zsh", "-l"]
